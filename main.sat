package main;
import cstring;
import cmath;

fn ptrfun(x: *int) {
    *x = 5;
}

type CStringArray : *cstring;

type Vector2 : struct {
    x: int;
    y: int;
}

fn main(argc: int, argv: CStringArray): int {
    arrofints : [4]int;
    printf("argc = %d\n", argc);
    const PI := 3.141593;
    const TAU := PI * 2.0;

    v2: Vector2;
    printf("Vector2 (x: %d, y: %d)\n", v2.x, v2.y);

    v2.x = 5;
    v2.y = 14;

    v2ptr := &v2;
    v2ptr.x = 11;

    printf("Vector2 (x: %d, y: %d)\n", v2.x, v2.y);

    i := argc;
    while i > 0 {
        printf("argv[%d] = %s\n", i - 1, argv[i - 1]);
        i -= 1;
    }

    arrofints[0] = 4;
    arrofints[2] = 9;
    arrofints[3] = arrofints[0] + arrofints[2];

    arrayelptr := &arrofints[1];
    *arrayelptr = 11;

    x := 0;
    while x < 4 {
        printf("arrofints[%d] = %d\n", x, arrofints[x]);
        x += 1;
    }

    str := "Hello, world!\n";
    len := strlen(str);
    i := 10;
    j := 2;
    ptr2 := &i;
    printf("i = %d\n", i);
    ptrfun(&i);
    printf("i = %d\n", *ptr2);
    t := *ptr2 + 5;
    i = t;
    f := -1.5;
    f = floor(f);
    if f > 0 && f < 3 {
        f = 2.0;
    }
    while i > 0 {
        while j > 0 {
            printf("%d, %d\n", i, j);
            j-=1;
        }
        j = 2;
        i-=1;
    }
    k := j % 2;
    if k == 0 {
        printf("j is even!\n");
    } else {
        printf("j is odd!\n");
    }
    if len > 5 {
        printf("String is greater than 5 characters!\n");
    }
    printf(str);
    printf("length: %d\n", len);
    printf("%d squared = %d\n", len, square(len));
    printf("3! = %d\n", factorial(3));
    printf("5! = %d", factorial(5));
    return 0;
}